version: '3.9'
services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring-public
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - monitoring-public
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      restart_policy:
        condition: on-failure

  alertmanager:
    image: prom/alertmanager
    volumes:
      - /home/deploy/configs/alertmanager/:/etc/alertmanager/
    networks:
      - default
      - traefik-public
      - monitoring-public
    command:
      --config.file=/etc/alertmanager/config.yml
      --storage.path=/alertmanager
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.alertmanager.rule=Host(`alertmanager.asmayshev.ru`)
        - traefik.http.services.alertmanager.loadBalancer.server.port=9093
        - traefik.http.routers.alertmanager.middlewares=secure-headers
        - traefik.http.routers.alertmanager.entryPoints=https
        - traefik.http.routers.alertmanager.tls=true
        - traefik.http.routers.alertmanager.tls.certResolver=letsEncrypt
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus
    volumes:
      - /home/deploy/configs/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    networks:
      - default
      - traefik-public
      - monitoring-public
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.prometheus.rule=Host(`prometheus.asmayshev.ru`)
        - traefik.http.services.prometheus.loadBalancer.server.port=9090
        - traefik.http.routers.prometheus.middlewares=secure-headers
        - traefik.http.routers.prometheus.entryPoints=https
        - traefik.http.routers.prometheus.tls=true
        - traefik.http.routers.prometheus.tls.certResolver=letsEncrypt
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - /home/deploy/configs/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.asmayshev.ru
    networks:
      - default
      - traefik-public
      - monitoring-public
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.grafana.rule=Host(`grafana.asmayshev.ru`)
        - traefik.http.services.grafana.loadBalancer.server.port=3000
        - traefik.http.routers.grafana.middlewares=secure-headers
        - traefik.http.routers.grafana.entryPoints=https
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.tls.certResolver=letsEncrypt
      restart_policy:
        condition: on-failure

networks:
  traefik-public:
    external: true
  monitoring-public:
    external: true

volumes:
  prometheus-data:
  grafana-data:
